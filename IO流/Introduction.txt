1.IO流，什么是IO？
I：Input
O:Output
通过IO可以完成硬盘文件的读和写

2.IO流的分类？
    有多种分类方式：
        一种方式是按照流的方向进行分类：
            以内存为参照物，
                往内存中去，叫做输出（Input）。或者叫做读（Read）。
                从内存中走出来，叫做输出（Output）。或者叫做写（Write）。
        另一种方式是按照读取数据方式不同进行分类：
            有的流是按照字节的方式读取数据，一次读取1个字节byte，等同于一次读取8个二进制位数。
            这种流是万能的，什么类型的文件都可以读取。
            有的流是按照字符的方式读取数据的，只能读取纯文本文件，连word文件都无法读取。
    综上所述，流的分类：
        输入流、输出流
        字节流、字符流

3.Java中的IO流已经写好了，我们程序员不需要关心，我们主要掌握的是怎么用就行。

4.Java IO流这块有四大家族：
    四大家族的首领：
        java.io.InputStream 字节输入流
        java.io.OutputStream 字节输出流

        java.io.Reader   字符输入流
        java.io.Writer   字符输出流

        四大家族的首领都是抽象类。（abstract class）

        所有的流都实现了：
            java.io.Closeable接口，都是可关闭的，都有close()方法。
            流毕竟是一个管道，这个是内存和硬盘之间的通道，用完之后一定要关闭，
            不然会占用很多资源，养成好习惯，用完流一定要关闭。

        所有的输出流都实现了：
            java.io.Flushable接口，都是可刷新的，都有flush()方法。
            养成一个好习惯，输出流在最终输出之后，一定要记得flush()
            刷新一下。这个刷新表示将通道/管道当中剩余未输出的数据强行输出完（清空管道！）
            刷新的作用就是清空管道。
            注意：如果没有flush()，可能会导致丢失数据。

    注意：在java中只要【类名】以Stream结尾的都是字节流。以Reader/Writer结尾的都是字符流.

5.java.io包下需要掌握的流有16个:
    文件专属：
        java.io.FileInputStream
        java.io.FileOutputStream
        java.io.FileReader
        java.io.FileWriter

    转换流：（将字节流转换成字符流）
        java.io.InputStreamReader
        java.io.OutputStreamWriter

    缓冲流专属：
        java.io.BufferedReader
        java.io.BufferedWriter
        java.io.BufferedInputStream
        java.io.BufferedOutputStream

    数据流专属：
        java.io.DataInputStream
        java.io.DataOutputStream

    标准输出流：
        java.io.PrintWriter
        java.io.PrintStream

    对象专属流：
        java.io.ObjectInputStream
        java.io.ObjectOutputStream
        





